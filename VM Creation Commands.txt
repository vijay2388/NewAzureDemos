Creating Virtual Machine using Azure CLI

#Login to azure cli and selecting the subscription

az login

az account set --subscription "Demonstration Account"

#Creating Windows VM
#Listing the resource group 
az group list --output table 

#Creating Resource Group
az group create --name "demo-rg" --location "centralus"

#Creating a Windows Virtual Machine
az vm create --resource-group "demo-rg" --name "demo-win-cli" --image "win2019datacenter"    --admin-username "vmadmin" --admin-password "Password_123" 

#Open RDP for remote access, it may already be open
az vm open-port --resource-group "demo-rg" --name "demo-win-cli" --port "3389"

#Get the IP Addresses for Remote Access
az vm list-ip-addresses --resource-group "demo-rg" --name "demo-win-cli" --output table

#Login to VM using RDP

#Creating Linux VM
az vm create --resource-group "demo-rg" --name "demo-linux-cli" --image "UbuntuLTS" --admin-username "vmadmin" --authentication-type "ssh" --generate-ssh-keys

#OpenSSH for remote access, it may already be open
az vm open-port --resource-group "demo-rg" --name "demo-linux-cli" --port "22"

#Get the IP address for Remote Access
az vm list-ip-addresses --resource-group "demo-rg" --name "demo-linux-cli" --output table

#Log into the Linux VM over SSH
ssh vmadmin@PASTE_PUBLIC_IP_HERE

#Clean up the resources in this demo for the next demo.
az group delete --name "demo-rg"

-------------------------------------------------------------------------------------------------------
Powershell Commands

#Logging in Azure Account and Select Subscription
Connect-AzAccount -SubscriptionName 'Demonstration Account'

#Ensure you're pointed at your correct subscription
Set-AzContext -SubscriptionName 'Demonstration Account'

#Create a Resource Group
New-AzResourceGroup -Name "demo-rg" -Location "CentralUS"

#Create a credential to use in the VM creation
$username = 'vmdmin'
$password = ConvertTo-SecureString 'password123$%^&*' -AsPlainText -Force
$WindowsCred = New-Object System.Management.Automation.PSCredential ($username, $password)


#Create a Windows Virtual Machine, can be used for both Windows and Linux.
#Note, you can create Windows or Linux VMs with PowerShell by specifying the correct Image parameter.
New-AzVM -ResourceGroupName 'demo-rg' -Name 'demo-win-az' -Image 'Win2019Datacenter' -Credential $WindowsCred -OpenPorts 3389

#Get the Public IP Address
Get-AzPublicIpAddress -ResourceGroupName 'demo-rg' -Name 'demo-win-az' | Select-Object IpAddress

#Open an RDP Client and log into it using this IP address and the credential defined above.

#Clean up after this demo
Remove-AzResourceGroup -Name 'demo-rg'
-------------------------------------------------------------------------------------------------
Deploying VM using ARM 

New-AzResourceGroup -Name 'demo-rg' -Location 'CentralUS'

New-AzResourceGroupDeployment -Name mydeployment -ResourceGroupName 'psdemo-rg' -TemplateFile 'template.json' -TemplateParameterFile 'parameters.json' 



ap-get update 
	
apt install docker.io - docker engine, docker cli , daemon

docker run - creates a container

docker pull - used to pull images from the registry 

docker push - used to push images to the registry 

docker image ls - list all the images 

docker ps - list all the active containers

docker ps -a - list all the container 

docker inspect - inspect the container

docker build - used to create a image 